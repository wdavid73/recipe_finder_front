name: Update Version

on:
  push:
    branches:
      - develop
  
jobs:
    update_version:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'

        - name: Install bumpversion
          run: pip install bumpversion
        - name: Configure Git author identity
          run: |
            git config --global user.email "your@email.com"
            git config --global user.name "Your Name"
            cd ${{ github.workspace }}
            git checkout develop

        - name: Check commit message
          id: check_commit
          run: |
            bump_level=none # default value

            keywords=("fix" "feat" "breaking" "redesign" "hotfix" "sparkles" "ambulance" "bug" "adhesive_bandage" "new_version" "merge" "Merge" "fire" "lipstick" "white_check_mark" "arrow_up" "recycle" "heavy_plus_sign" "pencil2" "truck" "alien" "bento" "iphone" "safety_vest")
            
            for keyword in "${keywords[@]}"; do
              if echo "$last_commit_message" | grep -q "$keyword"; then
                if [ "$keyword" == "fix" ] || [ "$keyword" == "hotfix" ] || [ "$keyword" == "bug" ] || [ "$keyword" == "adhesive_bandage" ] ; then
                  bump_level="patch"  # Increment version to patch
                elif [ "$keyword" == "fire" ] || [ "$keyword" == "lipstick" ] || [ "$keyword" == "arrow_up" ] || [ "$keyword" == "heavy_plus_sign" ] ; then
                  bump_level="patch"  # Increment version to patch
                elif [ "$keyword" == "pencil2" ] || [ "$keyword" == "truck" ] || [ "$keyword" == "alien" ] || [ "$keyword" == "bento" ] ; then
                  bump_level="patch"  # Increment version to patch
                elif [ "$keyword" == "iphone" ] || [ "$keyword" == "safety_vest" ] || [ "$keyword" == "recycle" ] || [ "$keyword" == ""white_check_mark"" ] ; then
                  bump_level="patch"  # Increment version to patch
                elif [ "$keyword" == "feat" ] || [ "$keyword" == "sparkles" ] || [ "$keyword" == "redesign" ] || [ "$keyword" == "Merge" ] || [ "$keyword" == "merge" ]; then
                  bump_level="minor"  # Increment version to minor
                elif [ "$keyword" == "breaking" ] || [ "$keyword" == "new_version" ]; then
                  bump_level="major"  # Increment version to major
                fi
                break  # Detén la búsqueda en cuanto se encuentra una coincidencia
              fi
            done

            echo "Increment version of $bump_level"
            echo "BUMP_LEVEL=$bump_level" >> $GITHUB_ENV
        
        - name: Bump version
          if: env.BUMP_LEVEL != 'none'
          run: |
            cd ${{ github.workspace }}
            bumpversion ${{ env.BUMP_LEVEL }}
          continue-on-error: true # Continue even if no match is found 

        - name: Create bumpversion.log
          run: touch ${{ github.workspace }}/bumpversion.log

        - name: Commit and push changes
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}